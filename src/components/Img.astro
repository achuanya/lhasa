---
export interface Props {
  src: string;
  alt: string;
  class?: string;
  style?: string;
  caption?: false | 'long' | 'short';
}

const { src, alt, class: className, style, caption = "long" } = Astro.props;
---

<figure class={`img-container ${className || ''}`} style={style}>
  <div class="img-wrapper">
    <img src={src} alt={alt} title={alt} loading="lazy" class="img-main" />
    {caption && (
      <figcaption class={`img-caption caption-${caption === 'long' ? 'bar' : 'tag'}`}>
        <span class="caption-text">{alt}</span>
      </figcaption>
    )}
  </div>
</figure>

<style>
  .img-container {
    margin: 1.5rem auto;
    text-align: center;
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    contain: layout style;
  }
  
  .img-wrapper {
    position: relative;
    display: inline-block;
    max-width: min(100%, 768px);
    width: auto;
    border-radius: 8px;
    box-sizing: border-box;
    overflow: hidden;
  }
  
  .img-main {
    max-width: 100%;
    width: 100%;
    height: auto;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: block;
    vertical-align: top;
    object-fit: cover;
    object-position: center;
  }
  
  .img-caption {
    position: absolute;
    margin: 0;
    padding: 0;
    max-width: 100%;
    box-sizing: border-box;
  }
  
  .caption-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: 0 0 8px 8px;
    overflow: hidden;
    max-width: 100%;
  }
  
  .caption-bar .caption-text {
    display: block;
    padding: 8px 16px;
    font-size: 0.9rem;
    font-weight: 500;
    color: #ffffff;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(12px) saturate(180%);
    -webkit-backdrop-filter: blur(12px) saturate(180%);
    text-align: left;
    line-height: 1.4;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
    border-radius: 0 0 8px 8px;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    box-sizing: border-box;
  }
  
  .caption-tag {
    bottom: 16px;
    left: 16px;
    max-width: calc(100% - 32px);
    box-sizing: border-box;
  }
  
  .caption-tag .caption-text {
    display: inline-block;
    padding: 8px 12px;
    font-size: 0.85rem;
    font-weight: 600;
    color: #ffffff;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(12px) saturate(180%);
    -webkit-backdrop-filter: blur(12px) saturate(180%);
    border-radius: 4px;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
    position: relative;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1);
    max-width: 100%;
    word-wrap: break-word;
    box-sizing: border-box;
  }
  
  :global(.dark) .caption-bar .caption-text {
    background: rgba(0, 0, 0, 0.7);
  }
  
  :global(.dark) .caption-tag .caption-text {
    background: rgba(0, 0, 0, 0.7);
  }
  
  :global(.dark) .img-main {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
  
  @media (max-width: 768px) {
    .img-container {
      margin: 1rem auto;
    }
    
    .img-wrapper {
      max-width: calc(100vw - 2rem);
    }
    
    .caption-bar .caption-text {
      font-size: 0.85rem;
      padding: 10px 12px;
    }
    
    .caption-tag .caption-text {
      font-size: 0.8rem;
      padding: 6px 10px;
    }
    
    .caption-tag {
      bottom: 12px;
      left: 12px;
      max-width: calc(100% - 24px);
    }
  }
  
  @media (max-width: 480px) {
    .img-wrapper {
      max-width: calc(100vw - 1rem);
    }
    
    .caption-bar .caption-text {
      font-size: 0.8rem;
      padding: 8px 10px;
    }
    
    .caption-tag .caption-text {
      font-size: 0.75rem;
      padding: 5px 8px;
    }
  }
  
  :global(.prose) .img-container {
    margin: 1.5rem auto !important;
  }
  
  :global(.prose) .img-container .img-main {
    margin: 0 !important;
  }
  
  .img-main {
    background-color: var(--color-muted, #f5f5f5);
    min-height: 200px;
  }
  
  :global(.dark) .img-main {
    background-color: var(--color-muted, #2a2a2a);
  }
</style>